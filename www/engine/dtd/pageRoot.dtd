<!--
Клиент           - браузер с загруженным на него кодом L2JZ.
Пользователь     - человек который работает с клиентом
Система          - клиент плюс серверная часть L2JZ(база данных, PHP скрипты и.т.д.)

Многие сайты устроены примерное так:
	Сайт это набор страниц. На каждой странице могут быть ссылки для перехода на другие
	страницы. Состояние всего сайта это полное имя текущей страницы. Это состояние хра-
	нится в адресной строке.
Более сложный вариант:
	Сайт это набор фреймов. Каждый фрейм это набор страниц. На каждой странице каждого
	фрейма могут быть ссылки для перехода на другую страницу какого-нибудь фрейма. В этом
	случае состояние системы - это сумма состояний всех её фреймов.
L2JZ очень похожа на второй вариант:
	Есть набор "фреймов". В каждый "фрейм" входит набор страниц. В каждый момент времени
	состояние системы определяется примерно так:
		фрейм1: страница1
		фрейм2: страница2
		фрейм3: страница3
		фрейм4: страница4
	Все возможные страницы описаны в файле который вы сейчас читаете. Каждая страница отно-
	сится к ровно одному фрейму. Два фрейма не могут содержать одну и ту-же страницу.

ФРЕЙМ
	Мы называем ЭТО фреймом но следует понимать что ОНО очень далеко от обычных фреймов. То
	что мы называем фреймом включает в себя вот что:
	Имя фрейма:
		это просто строка. Например "mainFrame".
	История фрейма и его текущее состояние:
		Текущее состояние фрейма это имя его текущей страницы(забегая вперёд скажем, что имя
		страницы это просто строка). История фрейма это список его предыдущих состояний.
	Обработчик фрейма:
		JS код который вызывается перед загрузкой любой страницы этого фрейма. То-есть когда
		пользователь щёлкает по ссылке вызывая какую-то страницу, первым делом вызывается об-
		работчик её фрейма.
	Вот. Это всё. Как видите фрейм это совсем не обязательно какая-то прямоугольная область
	сайта, независимая от остальных частей.
	
СТРАНИЦА
	Вот основные составляющие страницы:
	Имя фрейма:
		имя фрейма к которому относится страница.
	Имя страницы:
		Имя страницы это строка, уникальная для каждой страницы(даже если они относятся к раз-
		ным фреймам!).
	Аргументы страницы:
		Странице можно передавать аргументы. Для каждой страницы задано какие аргументы могут
		ей передаваться и в какой последовательности.
	Полное имя страницы:
		имя страницы после которого идут разделённые точками значения аргументов, которые
		передаются этой странице. Например если мы вызываем страницу player.main с единс-
		твенным аргументом id = 40364256, то полное имя страницы будет player.main.40364256
		Именно полное имя точно задаёт что-же именно должна делать система.
	Обработчик страницы:
		JS код который вызывается при вызове этой страницы, сразу за обработчиком фрейма.

ЭТОТ ДОКУМЕНТ
	В этом документе описаны фреймы и страницы. Вся система задана тэгом <site_root>
	<site_root> содержит фреймы - тэг <frame>. <frame> содержит все страницы, которые
	относятся к этому фрейму. Собственно страница задаётся тэгом <page> но для удобства
	страницы представлены в виде иерархической структуру из тэгов <section>. Для <section>
	можно задавать те-же атрибуты что и для <page>. Если для <section> задан какой-то атри-
	бут, он применяется ко всем страницам внутри этой <section>. Более глубокие определения
	атрибута перекрывают менее глубокие.

	

<page>
	АТТРИБУТЫ:
		name
				Обязательный аргумент. По именам секций и страниц строится путь к запросу.
		queryLink
				Этот атрибут позволяет связывать поддеревья дерева запросов (query_tree.xml) и страниц (этот
				файл). Он содержит некоторый путь от корня дерева запросов. Если он задан у тэга <page> то этот
				тэг сопоставляется тэгу <query> из дерева запросов на который указывает путь. Например:
					<page name="top100" query_link="chars.top100"> 
				свяжет это страницу с запросом "chars.top100". Это значит две вещи:
				1) Страница будет иметь тот-же уровень доступа что и запрос.
				2) Для страницы будет определён обработчик по умолчанию:
					<handler>l2jz.addTask(function(){doQuery('путь_к_запросу');});</handler>
				то-есть в данном конкретном случае:
					<handler>l2jz.addTask(function(){doQuery('chars.top100');});</handler>
				Аттрибут query_link	может быть и в секции или фрейме. Тогда он связывает целое поддерево страниц с
				поддеревом запросов. Например:
					<section name="clans" query_link="clans">
						<page name="all_clans"/>         //Свяжется с clans.all_clans
						<page name="search"/>            //Свяжется с clans.search
						<section name="some_section">
							<page name="some_page">        //Свяжется с clans.some_section.some_page
						</section>
					</section>
		arguments="arg1Name,arg2Name,arg3Name"
				В этом аттрибуте через запятую перечислены аргументы страницы. Аргументы задаются при вызове
				страницы после имени страницы и разделяются точкой. Например так:
				<section name="monster">
					<page name="main" arguments="mobId,showType"/>
				</section>
				Эта страница может вызываться например так: doLoad('monster.main.59.standard');
				Будет вызвана страница monster.main	с аргументами mobId=59, showType=standard
	ТЭГИ:
		<handler>
				Содержит JavaScript код который будет вызываться при вызове страницы. Если код задан
				для <section> то он будет добавлен в начало обработчиков всех страниц, которые содер-
				жатся в этой секции. Если для страницы не задан обработчик то для неё устанавливается
				обработчик по умолчанию(см. query_link).

СРЕДА ИСПОЛНЕНИЯ ОБРАБОТЧИКОВ
	Система определяет для обработчиков фреймов и страниц несколько специальных переменных
	p = {//символизирует вызванную страницу
		'f_name':
			имя фрейма
		'pageName': 
			название страницы(названия описаны в language.xml)
		'query':
			полное имя страницы(то-есть имя страницы после которого идут значения аргумен-
			тов через точку)
		'vars':
			ассоциативный массив аргументов переданных страницы. Первый элемент массива -
			vars['l2jz_query'] - имя страницы.
	}
-->
<!ELEMENT pageRoot (startHandler?,(section|page)+,endHandler?)>
<!ATTLIST pageRoot
	arguments CDATA #IMPLIED
	frame     CDATA #IMPLIED
>

<!ELEMENT section (startHandler?,(section|page)+,endHandler?)>
<!ATTLIST section
	name      CDATA #IMPLIED
	frame     CDATA #IMPLIED
	arguments CDATA #IMPLIED
>
	
<!ELEMENT page (#PCDATA)>
<!ATTLIST page
	name      CDATA #REQUIRED
	frame     CDATA #IMPLIED
	arguments CDATA #IMPLIED
>

<!ELEMENT startHandler (#PCDATA)>
<!ATTLIST startHandler
	if        CDATA #IMPLIED
>

<!ELEMENT endHandler (#PCDATA)>
<!ATTLIST endHandler
	if        CDATA #IMPLIED
>