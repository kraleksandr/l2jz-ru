<!--
ИНФОРМАЦИЯ УСТАРЕЛА
	AL = уровень доступа
	В этом документе заданы настройки всех запросов с которыми клиент может обратиться к серверу.
	Множество всех запросов представлено в виде дерева секций(тэг <section>). Секции могут содер-
	жать как другие секции так и собственно запросы(тэг <query>). Запрос может обладать определён-
	ным набором свойств. Те-же самые свойства могут быть заданы и у любой секции. Если секция име-
	ет какое-то свойство, это значит что то-же свойство с тем-же значением имеют и все входящие в
	неё запросы. При этом свойства заданные в более глубоких тэгах перекрывают свойства менее глу-
	боких.
	
	Запрос к серверу происходит следующим образом:
		1) На клиенте вызывается функция doQuery, которой передаётся имя запроса и его аргументы.
		2) doQuery отправляет на сервер запрос.
		3) На сервере запускается load.php
		4) Проверяется уровень доступа
		5) Проверяется правильность аргументов
		-) Если какая-нибудь проверка не была пройдена на клиент отправляется сообщение
		   об ошибке.
		6) Запускается PHP обработчик. PHP обработчики лежат в папке handlers
		7) Результат работы обработчика отправляется на клиент
		8) На клиенте запускается JS обработчик. JS обработчики находятся в этом файле.
	
	АТТРИБУТЫ ТЭГОВ SECTION,QUERY:
		name="string"(Должен быть задан для каждого <query> и <section>):
			По именам секций и запросов строится путь к запросу.
		access="number"(должен быть задан либо в <query> лиюо в одной из содержащих его <section>):
			Этот параметр опеределяет AL к запросу. Каждый пользователь l2jz имеет AL. Если пользова-
			тель не вошёл в систему, он имеет AL равный нулю, если вошёл, AL равный AL своего аккаунта
			(аккаунта а не чаров на этом аккунте). Пользователь должен иметь AL не меньше чем AL к зап-
			росу, чтобы получить к нему доступ.
		sAccess="function_name"
			Если задан этот параметр и проверка доступа по access дала false, будет вызвана функция
			с именем function_name. Если эта функция вернёт true то доступ к странице будет дан, если
			false, то нет.
		cache="time_in_seconds"(необязательный параметр):
			Этот параметр во первых говорит системе, что запрос следует кешировать, а во вторых задаёт
			сколько времени(в секундах) можно использовать закешированную информацию. Запрос не будет
			закэширован в том случае если он имеет AL больше 0. Кэширование также не будет использовать-
			ся, если информацию запрашивает пользователь с AL больше 0. Это сделано так-как система может
			отдавать разную информацию на одни и те-же запросы в зависимости от AL пользователя(например
			в топ100 она может отправлять на клиент названия аккаунтов чаров если AL больше 10).
		saveJS="arrayName"(необязательный параметр):
			Если задан этот параметр, результат запроса будет сохранён в sT['arrayName'].
		saveMode="mode"(необязательный параметр):
			Этот параметр имеет смысл только в том случае если для запроса задан аттрибут saveJS. Задаёт
			режим сохранения ответа.
				+ - Ответ сервера добавляется к уже существующему массиву. Общие элементы заменяются на
						элементы из ответа сервера.
				= - Все старые данные из sT полностью удаляются и на их месте записывается точная копия
						ответа сервера.
			Если saveMode не задан, данные сохраняются в режиме '='.
		cacheJS(необязательный параметр):
			Если задан этот параметр, клиент будет кешировать ответ на запрос от сервера. Клиент использует
			закешированный запрос, только если он вызывается с теми-же аргументами. Однако клиент не следит
			за состоянием переменных сессии на сервере, поэтому использовать эту опцию надо очень аккуратно
			и включать только для тех запросов которые не зависят от переменных сессии.
	ТЭГИ ТЭГОВ SECTION,QUERY:
		<handler>
		    
		<variable>
			Этот тэг описывает переменную, которая будет передана php обработчику запроса.
			АТТРИБУТЫ
				name(обязаельный атрибут)
					Задаёт имя переменной.
				type(обязательный атрибут)
					Задаёт тип переменной. Для каждого типа задана функция, которая про-
					веряет действительно-ли то что передали серверу соответсвует этому
					типу. Функции находятся в engine/php/checkVars_lib.php. Этим функциям
					передаётся 2 аргумента - значение переменной и ассоциативный массив всех
					аттрибутов этого тэга variable

СРЕДА ИСПОЛНЕНИЯ ОБРАБОТЧИКОВ НА СЕРВЕРЕ
	
	
СРЕДА ИСПОЛНЕНИЯ ОБРАБОТЧИКОВ НА КЛИЕНТЕ
	Система определяет для обработчиков запросов несколько специальных переменных
	p - 
		если запрос был вызван с какой-то страницы, то в p будет то-же самое что
		сформировала система для обработчика этой страницы
	q -
		Содержит всевозможную полезную информацию о запросе
		q = {
		}
	r -
		точная копия массива $_RESULT, который был сформирован на сервере.
-->
<!ELEMENT queryRoot ((section|query)+)>
<!ATTLIST queryRoot
	access  CDATA #IMPLIED
	sAccess   CDATA #IMPLIED
	cache     CDATA #IMPLIED
	saveJS    CDATA #IMPLIED
	saveMode  CDATA #IMPLIED
	cacheJS   (TRUE|FALSE) #IMPLIED
>

<!ELEMENT section (variable*,(section|query)+)>
<!ATTLIST section
	name      CDATA #REQUIRED
	access    CDATA #IMPLIED
	sAccess   CDATA #IMPLIED
	cache     CDATA #IMPLIED
	saveJS    CDATA #IMPLIED
	saveMode  CDATA #IMPLIED
	cacheJS   (TRUE|FALSE) #IMPLIED
>

<!ELEMENT query (variable*,phpHandler*)>
<!ATTLIST query
	name       CDATA #REQUIRED
	access     CDATA #IMPLIED
	sAccess    CDATA #IMPLIED
	cache      CDATA #IMPLIED
	saveJS     CDATA #IMPLIED
	saveMode   CDATA #IMPLIED
	cacheJS    (TRUE|FALSE) #IMPLIED
	phpHandler CDATA #IMPLIED
>

<!ELEMENT phpHandler (#PCDATA)>
<!ATTLIST phpHandler
	workMode   CDATA #IMPLIED
>
	
<!ELEMENT variable EMPTY>
<!ATTLIST variable
	name      CDATA #REQUIRED
	type      CDATA #REQUIRED
	clearVar  (TRUE|FALSE) #IMPLIED
	minlength CDATA #IMPLIED
>
