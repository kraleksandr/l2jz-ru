<?php
if(!defined('L2JZ'))exit;
ob_start();
require "engine/php/compileXML/convert_xml_lib.php";
require "engine/php/compileXML/convert_query.php";
require "engine/php/compileXML/convert_frame.php";
require "engine/php/compileXML/convert_pages.php";
require "engine/php/compileXML/convert_panels.php";
require "engine/php/compileXML/convert_tables.php";
require "engine/php/compileXML/jsCodeToTasks.php";
require "engine/php/compileXML/convert_language.php";
require "engine/php/compileXML/scanModuleForLocalObjects.php";
require "engine/php/compileXML/scanModuleForGlobalObjects.php";

//0 - Critical error. Do not save compile settings.
//1 - Warning. Data will be saved.
//2 - Just advice.
//3 - All is fine
function compileError($text,$level=1){
	switch($level){
		case"0":
			print '<font color="red">&nbsp;&nbsp;Error: </font>'.$text.'<br>';
		break;
		case"1":
			print '<font color="#996600">&nbsp;&nbsp;Warning: </font>'.$text.'<br>';
		break;
		case"2":
			print $text.'<br>';
		break;
	}
	if($GLOBALS['allIsFine']>$level)$GLOBALS['allIsFine'] = $level;
}
$allIsFine     = 3;
$l2jzVersionId = substr(md5((rand(1000000,9999999).microtime())),0,15);

//Определяем какие модули у нас есть
$modulesDir = opendir($GLOBALS['cfg']['l2jzHomeDir']."/modules");
while($file=readdir($modulesDir)){
	if(preg_match("/^\..*$/",$file))continue;
	$file = str_replace("/","",$file);
	$l2jzModules[$file] = $file;
}

//Сканируем папки модулей и загружаем их содержимое в массивы.
$l2jz           = array();//Сюда будут сохраняться серверные настройки запросов
$l2jzJS         = array();//Сюда будут сохраняться клиентские настройки запросов
$frames         = array();//Сюда будут сохраняться настройки фреймов
$pagesTree      = array();//Сюда будут сохраняться настройки страниц
$modules        = array();//Сюда будут сохраняться модули
$hLanguage      = array();//Сюда будут сохраняться текстовые элементы
$configArray    = array('l2jzVersionId'=>$l2jzVersionId);//Сюда будут записываться содержимое engine/php/option.php
foreach($l2jzModules as $moduleName)if(file_exists($GLOBALS['cfg']['l2jzHomeDir']."/modules/".$moduleName."/pages.xml")){
	scanModuleForGlobalObjects(
		$GLOBALS['cfg']['l2jzHomeDir']."/modules/".$moduleName,
		$moduleName,
		$moduleName
	);
}

print "Local objects<br>";
print "<div class='L2JZmodulesTree'>";
foreach($l2jzModules as $moduleName)if(file_exists($GLOBALS['cfg']['l2jzHomeDir']."/modules/".$moduleName."/pages.xml")){
	print "<div class='module'>".$moduleName."</div><div class='container'>";
	scanModuleForLocalObjects(
		$GLOBALS['cfg']['l2jzHomeDir']."/modules/".$moduleName,
		$moduleName,
		$moduleName
	);
	print "</div><br>";
}
print "</div>";

//Создаём серверный файл настроек запросов.
ArrayToPhpFile("l2jz",$l2jz,$GLOBALS['cfg']['l2jzHomeDir']."/engine/php/query_tree.php");

//Создаём файлы модулей
foreach($modules as $moduleName=>$module){
	$code =  "//This file was automaticaly generated by L2JZ engine.\n";
	foreach($module as $col=>$data)switch($col){
		case"templates":
			foreach($data as $templateName=>$templateCode){
				$code .= "l2jz_tpl['".$templateName."'] = ".php2js($templateCode).";\n";
			}
		break;
		case "panels":
			foreach($data as $panelName=>$panel){
				$code .= "l2jz_pnl['".$panelName."'] = ".php2js($panel).";\n";
			}
		break;
		case"tables":
			foreach($data as $tableName=>$table){
				$code .= "l2jz_tbl['".$tableName."'] = ".php2js($table).";\n";
			}
		break;
	}
	if(isset($module['js']))$code .= $module['js'];
	$fp = fopen($GLOBALS['cfg']['l2jzHomeDir']."/engine/js/modules/".$moduleName.".js","w");
	fwrite($fp,$code);
	fclose($fp);
}

//Создаём файлы языков
print "Languages:<br>";
$languagesArray = array();
$baseLanguage   = $preloadedArray['baseLanguage'] = $cfg['baseLanguage'];
$hLanguageBASE  = $hLanguage[$baseLanguage];
foreach($hLanguage as $language=>$data){
	$configArray['languages'][] = $language;
	$languagesArray[$language] = $language;
}
unset($languagesArray[$baseLanguage]);
foreach($languagesArray as $language){
	foreach($hLanguageBASE as $name=>$value){
		if(!isset($hLanguage[$language][$name]))$hLanguage[$language][$name] = $value;
	}
}
foreach($hLanguage as $language=>$data){
	print "&nbsp;&nbsp;$language".(($language==$baseLanguage)?"[BASE]":"")."<br>";
	$code = "l2jz_h={";
	foreach($data as $name=>$value){
		$code .= "'".$name."':".php2js($value).",\n";
	}
	$code .= "'_':''}";
	$fp = fopen($GLOBALS['cfg']['l2jzHomeDir']."/engine/js/language/".$language.".js","w");
	fwrite($fp,$code);
	fclose($fp);
}

//Создаём файл изначально загружаемых на клиент данных.
$preloadedCode  = "//This file was automaticaly generated by L2JZ engine.\n";

//Добавляем дерево запросов.
$preloadedCode .= "l2jz_q_t=".php2js($l2jzJS).";";

//Добавляем дерево страниц.
$preloadedCode .= "l2jz_p_t=".php2js($pagesTree).";";

//Сохраняем фреймы.
$preloadedCode .= "l2jz_frames=".php2js($frames).";";

//Записываем полученный файл.
$fp = fopen($GLOBALS['cfg']['l2jzHomeDir']."/engine/js/preloadedData.js","w");
fwrite($fp,$preloadedCode);
fclose($fp);

//Создаём PHP файл настроек.
ArrayToPhpFile("config",$configArray,$GLOBALS['cfg']['l2jzHomeDir']."/engine/php/config.php");

$_RESULT = ob_get_contents();
ob_end_clean();
switch($allIsFine){
	case"0":
		print "Compilation failed.";
	break;
	case"1":
		print "The system was compiled with warnings.";
	break;
	case"2":case"3":
		print "The system was successful compiled.";
	break;
}
?>